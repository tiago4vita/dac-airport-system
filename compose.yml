services:
  front-end:
    build:
      context: ./front-end
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3000
    depends_on:
      - api-gateway
    networks:
      - airport-network

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - MICROSERVICE_AUTH_URL=http://ms-auth:8080
      - MICROSERVICE_CLIENTE_URL=http://ms-cliente:8081
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - PASSWORD_SALT=airport-system-salt
    depends_on:
      - ms-auth
      - ms-cliente
      - rabbitmq
    networks:
      - airport-network

  ms-auth:
    build:
      context: ./services/ms-auth/airport-system.ms-auth
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/auth
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - airport-network

  mongodb:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./services/ms-auth/airport-system.ms-auth/src/main/resources/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      - MONGO_INITDB_DATABASE=auth
      - MONGODB_DISABLE_JAVASCRIPT=false
      - MONGODB_LOG_LEVEL=error
    command: mongod --quiet --logpath /dev/null --setParameter logLevel=0
    networks:
      - airport-network

  ms-cliente:
    build:
      context: ./services/ms-cliente/airport-system.ms-cliente
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-cliente:5432/cliente_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - postgres-cliente
    networks:
      - airport-network

  postgres-cliente:
    image: postgres:16
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=cliente_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_cliente_data:/var/lib/postgresql/data
    networks:
      - airport-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # AMQP port
      - "15672:15672"  # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - airport-network

  ms-voo:
    build:
      context: ./services/ms-voo
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-cliente:5432/voo_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - mongodb
      - rabbitmq
    networks:
      - airport-network

networks:
  airport-network:
    driver: bridge

volumes:
  mongodb_data:
  postgres_cliente_data: 